digraph AST {
4 [shape=box, label="Literal value=true\ntype: bool"];
3 [shape=box, label="FuncCall name='foo'"];
3 -> 4;
6 [shape=box, label="Literal value=true\ntype: bool"];
8 [shape=box, label="VarDecl name='a'\ntype: int"];
9 [shape=box, label="VarDecl name='b'\ntype: int"];
10 [shape=box, label="VarDecl name='a'\ntype: int"];
7 [shape=box, label="Block\nsymbolTable: \n  a : int\n  b : int\n  a : int"];
7 -> 8;
7 -> 9;
7 -> 10;
5 [shape=box, label="WhileLoop"];
5 -> 6;
5 -> 7;
12 [shape=box, label="Literal value=0\ntype: int"];
11 [shape=box, label="Return"];
11 -> 12;
2 [shape=box, label="Block\nsymbolTable: (empty)"];
2 -> 3;
2 -> 5;
2 -> 11;
1 [shape=box, label="FuncDecl name='main'\ntype: int\nsymbolTable: (empty)"];
1 -> 2;
15 [shape=box, label="Return"];
14 [shape=box, label="Block\nsymbolTable: (empty)"];
14 -> 15;
13 [shape=box, label="FuncDecl name='foo'\ntype: bool\nsymbolTable: \n  i : int\n  b : bool"];
13 -> 14;
0 [shape=box, label="Program\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  main : () -> int\n  foo : (int, bool) -> void"];
0 -> 1;
0 -> 13;
}
